/**
 * New Game Dialog Service and Controller
 * @author lawrence.daniels@gmail.com
 */
(function () {
    var app = angular.module('shocktrade');

    /**
     * New Game Dialog Singleton
     * @author lawrence.daniels@gmail.com
     */
    app.factory('NewGameDialog', function ($http, $log, $modal, $q) {
        var service = {};

        /**
         * Sign-up Modal Dialog
         */
        service.popup = function ($scope, callback) {
            // create an instance of the dialog
            var $modalInstance = $modal.open({
                controller: 'NewGameDialogCtrl',
                templateUrl: 'new_game_dialog.htm',
                resolve: {
                    form: function () {
                        return $scope.form;
                    }
                }
            });

            $modalInstance.result.then(function (form) {
                service.createNewGame(form).then(
                    function (response) {
                        if (callback) callback(response);
                    },
                    function (err) {

                    }
                );
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        service.createNewGame = function (form) {
            $log.info("Creating new game " + angular.toJson(form));
            var deferred = $q.defer();
            $http({
                method: "PUT",
                url: "/api/contest",
                data: angular.toJson(form)
            }).success(function (data, status, headers, config) {
                deferred.resolve(data);
            }).error(function (response) {
                deferred.reject(response);
            });
            return deferred.promise;
        };

        return service;
    });

    /**
     * New Game Dialog Controller
     * @author lawrence.daniels@gmail.com
     */
    app.controller('NewGameDialogCtrl', ['$rootScope', '$scope', '$http', '$log', '$modalInstance',
        function ($rootScope, $scope, $http, $log, $modalInstance) {
            $scope.startingBalances = [
              5000, 10000, 25000, 50000, 100000
            ];
            $scope.restrictionTypes = [];
            $scope.form = {
                startingBalance: $scope.startingBalances[0],
                levelCap: "1",
            };

            $scope.create = function () {
                // add the player info
                $scope.form.player = {
                    id: $rootScope.MySession.userProfile._id.$oid,
                    name: $rootScope.MySession.userProfile.name,
                    facebookId: $rootScope.MySession.fbUserID
                };

                $log.info("form = " + angular.toJson($scope.form));
                if (isValidForm()) {
                    $modalInstance.close($scope.form);
                }
            };

            $scope.cancel = function () {
                $modalInstance.dismiss('cancel');
            };

            function loadRestrictionTypes() {
                $http.get("/api/contest/restrictions")
                    .success(function(results) {
                        $scope.restrictionTypes = results;
                        if(! $scope.form.restriction && results.length) {
                            $scope.form.restriction = results[0];
                        }
                    })
                    .error(function(err) {
                        $log.error("An error occurred loading the access restrictions");
                    });
            }

            function isValidForm() {
                return $scope.form.name && $scope.form.name.trim().length > 0;
            }

            // pre-load the restriction types
            loadRestrictionTypes();
        }]);

})();