/**
 * Contest Service
 * @author lawrence.daniels@gmail.com
 */
angular
	.module('shocktrade')
	.factory('ContestService', function($http, $log, $q, Errors, QuoteService) {
	var service = {};
	
	service.getChart = function(contestId, participantName, chartName) {
		// build the appropriate URL
		var uriString = (chartName == "gains" || chartName == "losses") 
			? "/api/charts/performance/" + chartName + "/" + contestId + "/" + participantName   
			: "/api/charts/exposure/" + chartName + "/" + contestId + "/" + participantName;
		
		// load the chart representing the securities
		return $http.get(uriString)
					.then(function(response) {			
						return response.data;
					});
	}
	
	service.getContestByID = function(contestId) {
		return $http.get("/api/contest/" + contestId + "/find");
	}
	
	service.getHeldSecurities = function(playerId) {
		return $http.get("/api/contests/positions/" + playerId);
	}
	
	service.getParticipantByName = function(contestId, playerName) {
		return $http.get("/api/contest/" + contestId + "/player/" + playerName);
	}
	
	service.getRankings = function(contestId) {
		return $http.get("/api/contest/" + contestId + "/rankings");
	}
	
	service.getRankingsWithCallback = function(contest, callback) {
		return $http.get("/api/contest/" + contest._id.$oid + "/rankings").then(function(response) {
			contest.rankings = response.data;
			callback(contest);
		});
	}
	
	service.getMyContests = function(playerId) {
		return $http.get('/api/contests/mine/' + playerId);
	}
	
	service.findContests = function(searchOptions) {
		return $http({
			method : 'POST',
			url : '/api/contests/search',
			data : angular.toJson(searchOptions)	
		}).then(function(response) {
			return response.data;
		});
	}

	service.joinContest = function(contestId, playerInfo) {
		return $http({
			method : 'POST',
			url : "/api/contest/" + contestId + "/join",
			data : angular.toJson(playerInfo)
		});
	};
	
	service.deleteContest = function(contestId) {
		return $http.delete('/api/contest/' + contestId);
	}
	
	/////////////////////////////////////////////////////////////////////////////
	//			Chat
	/////////////////////////////////////////////////////////////////////////////	
	
	service.sendChatMessage = function(contestId, sender, message) {
		return $http({
			method : 'PUT',
			url : '/api/contest/' + contestId + '/chat/' + sender,
			data : angular.toJson(message)
		});
	}
	
	/////////////////////////////////////////////////////////////////////////////
	//			Orders
	/////////////////////////////////////////////////////////////////////////////
	
	service.cancelOrder = function(contestId, playerName, orderId) {
		return $http.delete('/api/contest/' + contestId + '/order/' + playerName + '/' + orderId).then(function(response) {
			return response.data;
		});
	};
	
	service.createOrder = function(contestId, playerId, order) {
		return $http({
			method : "PUT",
			url : "/api/contest/" + contestId + "/order/" + playerId,
			data : angular.toJson(order)
		});
	};
	
	service.orderQuote = function(symbol) {	
		$log.info("Loading symbol " + symbol + "'...");
		return $http.get('/api/quotes/order/symbol/' + symbol)
				.then(function(response) {
					var quote = response.data;
					if(quote.symbol) {
						$log.info("Setting lastSymbol as " + quote.symbol);
						QuoteService.lastSymbol = quote.symbol;	
					}
					return quote;
				});
	};	
	
	return service;
});